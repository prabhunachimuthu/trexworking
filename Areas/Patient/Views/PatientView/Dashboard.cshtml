@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Http
@using Highsoft.Web.Mvc.Stocks
@using OneDirect.Helper
@using OneDirect.ViewModels
@using Newtonsoft.Json

@model OneDirect.ViewModels.DashboardView
@{

    Func<int, string> getcolor = (progress) =>
    {
        if (progress == 0)
            return "";
        else if (progress < 50)
            return "background-color:red;font-weight:bold;";
        else if (progress > 70)
            return "background-color:green;font-weight:bold;";
        else
            return "background-color:yellow;font-weight:bold;";
    };
}
@section styles{
    <style type="text/css">
        .btn-group-xs > .btn, .btn-xs {
            padding: 1px 1px;
            font-size: 12px;
            line-height: 1.2;
            border-radius: 3px;
            margin-top: 1px;
        }

        .circle {
            background-color: slateblue;
            border-color: white;
            border-radius: 50%;
            border-width: 1px;
            height: 45px;
            width: 45px;
            padding-bottom: 0;
            font-size:large;
        }
    </style>
}
<style>
    #label label-primary pull-right {
        float: right !important;
    }

    #pull-right {
        float: right !important;
    }
</style>

<div class="checkout pages section" style="padding-top:15px">
    <div class="side-nav-panel-right pull-right" style="background-color:none;padding-top:5px">
        <a href="#" data-activates="" class="" style="background-color:none;" onclick="changechartView();"><img src="~/images/calendar_icon.png" id="imageicon" width="30" height="30" title="calendar" /></a>
    </div>

    <div class="container">
        <!-- checkout -->

        <div class="pages-head" style="padding-bottom:5px;">
            <h3 style="color:white">@ViewBag.HeaderName</h3>
        </div>
        <div class="checkout-content">
            <div class="row">
                <div class="col s12">
                    <ul class="collapsible" data-collapsible="accordion">
                        <li id="chartrom">
                            <div class="collapsible-header active"><h5>Prescription</h5></div>
                            <div class="collapsible-body" style="padding-top:5px;background-color:white">
                                <div class="col s12 checkout-radio">
                                    <div class="col s4">
                                        <label for="guest-checkout"><span style="font-weight:bold">Rx Start:</span></label>
                                        <input type="hidden" id="rxstartdate" value="@(Model.PatientRx.RxStartDate.HasValue ? Convert.ToDateTime(Model.PatientRx.RxStartDate).ToString("yyyy-MM-dd") : "")" />
                                        <p class="text-muted" style="font-size:large;color:steelblue;">@(Model.PatientRx.RxStartDate.HasValue ? Convert.ToDateTime(Model.PatientRx.RxStartDate).ToString("MM/dd/yy") : "")</p>
                                    </div>
                                    <div class="col s4" align="center">
                                        <div class="circle" style="font-weight:bold;color:white;padding-top:8px;padding-left:5px;font-size:large">
                                            <label for="guest-checkout"><span style="font-weight:bold;color:white">@Model.percentage%</span></label>
                                        </div>
                                    </div>


                                    <div class="col s4" align="right">
                                        <div>
                                            <label for="guest-checkout"><span style="font-weight:bold">Rx End:</span></label>
                                        </div>

                                        <div>
                                            <input type="hidden" id="rxenddate" value="@(Model.PatientRx.RxEndDate.HasValue ? Convert.ToDateTime(Model.PatientRx.RxEndDate).ToString("yyyy-MM-dd") : "")" />
                                            <p class="text-muted" id="date-color" style="font-size:large;color:steelblue;">
                                                @(Model.PatientRx.RxEndDate.HasValue ? Convert.ToDateTime(Model.PatientRx.RxEndDate).ToString("MM/dd/yy") : "")
                                            </p>
                                        </div>

                                    </div>
                                </div>

                                <div class="checkout-login" style="margin-top:80px">
                                    <div class="row">
                                        <div class="col s12">
                                            <h6>Range of Motion</h6>
                                            <div class="chart" id="line-chart-rom" style="margin-top:20px;margin-bottom:0;min-height:150px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);">
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li id="chartcalendar" style="display:none;">

                            <div class="collapsible-header"><h5>Treatment Calendar</h5></div>
                            <div class="collapsible-body" style="background-color:white">
                                <div class="billing-information">
                                    <div id="calendar" class="fc fc-ltr fc-unthemed">

                                    </div>
                                </div>
                            </div>
                        </li>

                    </ul>
                </div>
            </div>
        </div>

        <!-- end checkout -->


    </div>
</div>
@section Scripts {
    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>

    <script type="text/javascript">
        var calendardata = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TreatmentCalendar));
        console.log(calendardata);
        $(function () {
            "use strict";

            var height = $(window).height() - $(".navbar-bottom").height() - $(".navbar-top").height() - $(".pages-head").height() - $(".checkout-radio").height()-100;
            //$(".content-wrapper").css("min-height", "0px");
            //$(".content").css("min-height", "0px");
            //$(".content-wrapper").css("height", height+"px");
            //$(".content").css("height", (height-30) + "px");
            console.log(height);
            //var chartheight = height - 120;
            //console.log("window height:" + $(window).height());
            //console.log("footer height:" + $(".main-footer").height());
            //console.log("header height:" + $(".main-header").height());
            $("#line-chart-rom").css("height", (height/2) + "px");
            //$("#chartcalendar").css("height", (height / 2) + "px");
            //$('#calendar').fullCalendar('option', 'height', (height / 2));
            //$("#chartcalendar").css("height", (chartheight-20) + "px");

                //LINE randomly generated data

                var first = [], second = []
                var romdatavalue =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ROM));
        var ymax = romdatavalue.ymax;
        var ymin = romdatavalue.ymin;
        console.log(romdatavalue);

                if (romdatavalue.ROMFlextion != null && romdatavalue.ROMFlextion.length > 0) {
                    for (var j = 0; j < romdatavalue.ROMFlextion.length; j++) {
                        first.push([romdatavalue.ROMFlextion[j].dateValue, romdatavalue.ROMFlextion[j].Flexion]);
                    }
                }
                if (romdatavalue.ROMExtension != null && romdatavalue.ROMExtension.length > 0) {
                    for (var j = 0; j < romdatavalue.ROMExtension.length; j++) {
                        second.push([romdatavalue.ROMExtension[j].dateValue, romdatavalue.ROMExtension[j].Extension]);
                    }
                }
                var line_data1 = {
                    data: first,
                    color: 'Orange'
                }
                var line_data2 = {
                    data: second,
                    color: 'Blue'
                }
                console.log(line_data1);
                console.log(line_data2);
                $.plot('#line-chart-rom', [line_data1, line_data2], {
                grid: {
                    hoverable: true,
                        borderColor: '#f3f3f3',
                        borderWidth: 1,
                        tickColor: '#f3f3f3'
                    },
                    series: {
                    shadowSize: 0,
                        lines: {
                        show: true
                        },
                        points: {
                        show: false
                        }
                },
                    lines: {
                    fill: false,
                        color: ['Orange', 'Blue']
                    },
                    yaxis: {
                    min: ymin, max: ymax,
                        show: true
                    },
                    xaxis: {
                    show: false
                    }

            })
                //Initialize tooltip on hover
                $('<div class="tooltip-inner" id="line-chart-rom-tooltip"></div>').css({
                position: 'absolute',
                    display: 'none',
                    opacity: 0.8
                }).appendTo('body')
                $('#line-chart-rom').bind('plothover', function (event, pos, item) {

                if (item) {
                    var x = item.datapoint[0].toFixed(2),
                        y = item.datapoint[1]

                        $('#line-chart-rom-tooltip').html(x + ' : ' + y)
                            .css({ top: item.pageY + 5, left: item.pageX - 15 })
                            .fadeIn(200)
                    } else {
                        $('#line-chart-rom-tooltip').hide()
                    }

            })
                /* END LINE CHART */




        });

        function triggerfunction(tab) {

            window.location = $(tab).find('a').attr("data-value");
        }
        function drawCalendar() {
            /* initialize the calendar
       -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date();
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear();
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: ''
                },
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },
                //Random default events
                events: calendardata,


                editable: true,
                droppable: false, // this allows things to be dropped onto the calendar !!!
                theme: false,
                height: "parent",//auto
                aspectRation: 2,
                fixedWeekCount: false,
                visibleRange: {
                    start: $("#rxstartdate").val(),
                    end: $("#rxenddate").val()
                },
                defaultView: 'month',

            });

            //$("#chartcalendar").css("display", "none");


        }

    </script>


}





